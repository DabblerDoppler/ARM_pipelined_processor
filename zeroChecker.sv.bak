module #(parameter WIDTH=64) zeroChecker(in, out);


parameter delay = 50;

initial assert (WIDTH > 1);

input logic [WIDTH-1:0] in;
output logic out;

logic nextInput;


generate
	//end case
	if(WIDTH == 2) begin
	
	nor #delay finalNor(out, in[0], in[1]);
	
	end else begin
	
		nor #delay thisNor(nextInput[0], in[0], in[1]);
		
		assign nextInput[WIDTH-2:1] = in[WIDTH-1:2];
		
		zeroChecker #(.WIDTH(WIDTH-1)) nextChecker(.in(nextInput), .out);
	
	end

endgenerate


endmodule